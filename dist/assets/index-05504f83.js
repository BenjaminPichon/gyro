(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&l(s)}).observe(document,{childList:!0,subtree:!0});function i(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerpolicy&&(r.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?r.credentials="include":e.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function l(e){if(e.ep)return;e.ep=!0;const r=i(e);fetch(e.href,r)}})();let t=null;try{t=new Accelerometer({referenceFrame:"device"}),t.addEventListener("error",o=>{o.error.name==="NotAllowedError"||o.error.name==="NotReadableError"&&console.log("Cannot connect to the sensor.")}),t.addEventListener("reading",()=>reloadOnShake(t)),t.start(),console.log(t)}catch(o){if(o.name==="SecurityError")console.log("Sensor construction was blocked by a permissions policy.");else if(o.name==="ReferenceError")console.log("Sensor is not supported by the User Agent.");else throw o}
//# sourceMappingURL=index-05504f83.js.map
